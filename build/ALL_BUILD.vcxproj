<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x86</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{B75B5BD4-0143-3EAB-8B6F-57D11B08C005}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.5.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\myregion\LearnOptiX\SrRenderer\ext\include;D:\software\imgui-master;D:\software\imgui-master\backends;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.5\include;D:\software\OptiX SDK 7.4.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\myregion\LearnOptiX\SrRenderer\ext\include;D:\software\imgui-master;D:\software\imgui-master\backends;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.5\include;D:\software\OptiX SDK 7.4.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\myregion\LearnOptiX\SrRenderer\ext\include;D:\software\imgui-master;D:\software\imgui-master\backends;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.5\include;D:\software\OptiX SDK 7.4.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\myregion\LearnOptiX\SrRenderer\ext\include;D:\software\imgui-master;D:\software\imgui-master\backends;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.5\include;D:\software\OptiX SDK 7.4.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\myregion\LearnOptiX\SrRenderer\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/myregion/LearnOptiX/SrRenderer/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\software\CMake\bin\cmake.exe -SD:/myregion/LearnOptiX/SrRenderer -BD:/myregion/LearnOptiX/SrRenderer/build --check-stamp-file D:/myregion/LearnOptiX/SrRenderer/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCUDACompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCXXCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeRCCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeSystem.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCUDAInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\NVIDIA-CUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindCUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindCUDA\select_compute_arch.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;D:\software\OptiX SDK 7.4.0\SDK\CMake\FindOptiX.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/myregion/LearnOptiX/SrRenderer/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\software\CMake\bin\cmake.exe -SD:/myregion/LearnOptiX/SrRenderer -BD:/myregion/LearnOptiX/SrRenderer/build --check-stamp-file D:/myregion/LearnOptiX/SrRenderer/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCUDACompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCXXCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeRCCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeSystem.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCUDAInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\NVIDIA-CUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindCUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindCUDA\select_compute_arch.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;D:\software\OptiX SDK 7.4.0\SDK\CMake\FindOptiX.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/myregion/LearnOptiX/SrRenderer/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\software\CMake\bin\cmake.exe -SD:/myregion/LearnOptiX/SrRenderer -BD:/myregion/LearnOptiX/SrRenderer/build --check-stamp-file D:/myregion/LearnOptiX/SrRenderer/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCUDACompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCXXCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeRCCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeSystem.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCUDAInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\NVIDIA-CUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindCUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindCUDA\select_compute_arch.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;D:\software\OptiX SDK 7.4.0\SDK\CMake\FindOptiX.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/myregion/LearnOptiX/SrRenderer/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\software\CMake\bin\cmake.exe -SD:/myregion/LearnOptiX/SrRenderer -BD:/myregion/LearnOptiX/SrRenderer/build --check-stamp-file D:/myregion/LearnOptiX/SrRenderer/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCUDACompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeCXXCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeRCCompiler.cmake;D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\3.23.0\CMakeSystem.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCUDAInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;D:\software\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;D:\software\CMake\share\cmake-3.23\Modules\Compiler\NVIDIA-CUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindCUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindCUDA\select_compute_arch.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;D:\software\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;D:\software\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;D:\software\OptiX SDK 7.4.0\SDK\CMake\FindOptiX.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\myregion\LearnOptiX\SrRenderer\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\myregion\LearnOptiX\SrRenderer\build\ZERO_CHECK.vcxproj">
      <Project>{6F2CBB5C-652A-3BA7-B1FD-09F25742ABDF}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\myregion\LearnOptiX\SrRenderer\build\src\main.vcxproj">
      <Project>{57483B09-10A5-3611-BDBD-96EFEBB1D8C4}</Project>
      <Name>main</Name>
    </ProjectReference>
    <ProjectReference Include="D:\myregion\LearnOptiX\SrRenderer\build\src\Model\model.vcxproj">
      <Project>{6D408B1E-AE0D-3AF4-A108-0A5C90B7F95A}</Project>
      <Name>model</Name>
    </ProjectReference>
    <ProjectReference Include="D:\myregion\LearnOptiX\SrRenderer\build\src\Intergrator\test.vcxproj">
      <Project>{F6C720DA-B178-3806-80EC-3147F115A2E1}</Project>
      <Name>test</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\myregion\LearnOptiX\SrRenderer\build\src\Opengl\window.vcxproj">
      <Project>{DBEF6A20-FCB6-3FA0-B9A7-BC77CA348829}</Project>
      <Name>window</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.5.targets" />
  </ImportGroup>
</Project>